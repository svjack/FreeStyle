import os
import shutil
import subprocess
import json
import gradio as gr
from glob import glob

# 设置默认的 Python 可执行文件路径
PYTHON_BIN = "python"

# 创建临时目录
def create_temp_dirs():
    refimgpath = "./ContentImages/temp_imgs0"
    output_dir = "./temp_output0"
    if not os.path.exists(refimgpath):
        os.makedirs(refimgpath)
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    return refimgpath, output_dir

# 清空临时目录
def clear_temp_dirs(refimgpath, output_dir):
    if os.path.exists(refimgpath):
        shutil.rmtree(refimgpath)
    if os.path.exists(output_dir):
        shutil.rmtree(output_dir)

# 保存风格提示到 JSON 文件
def save_prompt_to_json(prompt, json_path):
    with open(json_path, "w") as f:
        json.dump([prompt], f)

# 运行风格迁移
def run_style_transfer(image, prompt, python_bin, num_images, sampler, step, cfg, height, width, seed, n, b, s):
    refimgpath, output_dir = create_temp_dirs()

    if os.path.exists(os.path.join("{}_fp16".format(output_dir))):
        shutil.rmtree(os.path.join("{}_fp16".format(output_dir)))

    image_path = os.path.join(refimgpath, "content_image.png")
    image.save(image_path)

    json_path = "style_prompt.json"
    save_prompt_to_json(prompt, json_path)

    command = [
        python_bin, "stable_diffusion_xl_test.py",
        "--refimgpath", refimgpath,
        "--model_name", "./stable-diffusion-xl-base-1.0",
        "--unet_name", "./stable-diffusion-xl-base-1.0/unet/",
        "--prompt_json", json_path,
        "--num_images_per_prompt", str(num_images),
        "--output_dir", output_dir,
        "--sampler", sampler,
        "--step", str(step),
        "--cfg", str(cfg),
        "--height", str(height),
        "--width", str(width),
        "--seed", str(seed),
        "--n", str(n),
        "--b", str(b),
        "--s", str(s)
    ]

    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    output = []
    while True:
        line = process.stdout.readline()
        if not line:
            break
        output.append(line)
        print(line, end='')

    process.wait()

    assert os.path.exists(
        os.path.join("{}_fp16".format(output_dir))
        )
    generated_images = glob(os.path.join("{}_fp16".format(output_dir), "content_image", "*.png"))
    clear_temp_dirs(refimgpath, output_dir)
    print("generated_images :")
    print(generated_images)

    return output, generated_images

# Gradio 接口
def gradio_interface(image, prompt, python_bin, num_images, sampler, step, cfg, height, width, seed, n, b, s):
    output, generated_images = run_style_transfer(image, prompt, python_bin, num_images, sampler, step, cfg, height, width, seed, n, b, s)
    return "\n".join(output), generated_images

# 示例数据
examples = [['ContentImages/imgs0/0000.png',
  'Cyberpunk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.1],
 ['ContentImages/imgs1/0000.png',
  'Sketching',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  2.8,
  1.0],
 ['ContentImages/imgs2/0000.png',
  'Embroidery Art',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  1.8,
  0.8],
 ['ContentImages/imgs3/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  0.5],
 ['ContentImages/imgs4/0000.png',
  'Pixel Punk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.8],
 ['ContentImages/imgs5/0000.png',
  'Wasteland',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.4],
 ['ContentImages/imgs0/0000.png',
  'Sketching',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.8],
 ['ContentImages/imgs1/0000.png',
  'Watercolor Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.6,
  0.6],
 ['ContentImages/imgs2/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.8],
 ['ContentImages/imgs3/0000.png',
  ' Cyberpunk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.7],
 ['ContentImages/imgs4/0000.png',
  'Wasteland',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.8],
 ['ContentImages/imgs5/0000.png',
  'Chinese Ink',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.6],
 ['ContentImages/imgs0/0000.png',
  'Watercolor Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.9,
  0.3],
 ['ContentImages/imgs1/0000.png',
  'Embroidery Art',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.6],
 ['ContentImages/imgs2/0000.png',
  'chineseink',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  2.5,
  0.5],
 ['ContentImages/imgs3/0000.png',
  'Oilpainting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.2],
 ['ContentImages/imgs4/0000.png',
  'oilpainting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.4],
 ['ContentImages/imgs5/0000.png',
  'Pixel punk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.4],
 ['ContentImages/imgs0/0000.png',
  'Cyberpunk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  2.8,
  0.8],
 ['ContentImages/imgs1/0000.png',
  'Sketching',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  1.6],
 ['ContentImages/imgs2/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.6],
 ['ContentImages/imgs3/0000.png',
  'Oil Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  1.4],
 ['ContentImages/imgs4/0000.png',
  'Wasteland',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.6],
 ['ContentImages/imgs5/0000.png',
  'Pixel Punk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  2.8,
  0.8],
 ['ContentImages/imgs0/0000.png',
  'Watercolor painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.2],
 ['ContentImages/imgs1/0000.png',
  'Sketching',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  2.6,
  1.0],
 ['ContentImages/imgs2/0000.png',
  'Illumination',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  3.5,
  2.2],
 ['ContentImages/imgs3/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.5,
  1.2],
 ['ContentImages/imgs4/0000.png',
  'JOJO',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  0.8],
 ['ContentImages/imgs5/0000.png',
  'Wasteland',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  2.8,
  0.8],
 ['ContentImages/imgs0/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  1.1],
 ['ContentImages/imgs1/0000.png',
  'Watercolor Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  1.4],
 ['ContentImages/imgs2/0000.png',
  'Ufotable',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  320,
  2.8,
  1.6],
 ['ContentImages/imgs3/0000.png',
  'Illumination',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.6,
  1.2],
 ['ContentImages/imgs4/0000.png',
  'Cyberpunk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.6],
 ['ContentImages/imgs5/0000.png',
  'JOJO',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.6],
 ['ContentImages/imgs0/0000.png',
  'Embroidery Art',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.4,
  1.7],
 ['ContentImages/imgs1/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.2],
 ['ContentImages/imgs2/0000.png',
  'OilPainting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.6,
  1.8],
 ['ContentImages/imgs3/0000.png',
  'Ufotable',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  1.1],
 ['ContentImages/imgs4/0000.png',
  'Sketching',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.2],
 ['ContentImages/imgs5/0000.png',
  'JOJO',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  0.8],
 ['ContentImages/imgs0/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.6],
 ['ContentImages/imgs1/0000.png',
  'Ufotable',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  1.4],
 ['ContentImages/imgs2/0000.png',
  'chineseink',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.1],
 ['ContentImages/imgs3/0000.png',
  'Ufotable',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.5,
  0.8],
 ['ContentImages/imgs4/0000.png',
  'pixel punk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.4],
 ['ContentImages/imgs5/0000.png',
  'Children Crayon Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.2,
  1.4],
 ['ContentImages/imgs0/0000.png',
  'wasteland',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.4],
 ['ContentImages/imgs1/0000.png',
  'LEGO Toy',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.2,
  1.4],
 ['ContentImages/imgs2/0000.png',
  'watercolor painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.6,
  0.6],
 ['ContentImages/imgs3/0000.png',
  'Origami',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.2,
  1.4],
 ['ContentImages/imgs4/0000.png',
  'Cyberpunk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.2,
  1.0],
 ['ContentImages/imgs5/0000.png',
  'Pixel',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  1.8,
  1.4],
 ['ContentImages/imgs0/0000.png',
  'Embroidery Art',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.2],
 ['ContentImages/imgs1/0000.png',
  'Children Crayon Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.4,
  1.4],
 ['ContentImages/imgs2/0000.png',
  'Oil painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.4],
 ['ContentImages/imgs3/0000.png',
  'LEGO Toy',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.4],
 ['ContentImages/imgs4/0000.png',
  'Pixel punk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.2,
  1.6],
 ['ContentImages/imgs5/0000.png',
  'Pixel',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.4,
  1.4],
 ['ContentImages/imgs0/0000.png',
  'Sketching',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  2.5],
 ['ContentImages/imgs1/0000.png',
  'Children Crayon Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.2,
  1.4],
 ['ContentImages/imgs2/0000.png',
  'Studio Ghibli',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.8],
 ['ContentImages/imgs3/0000.png',
  'LEGO Toy',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.2,
  1.6],
 ['ContentImages/imgs4/0000.png',
  'Watercolor Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.4],
 ['ContentImages/imgs5/0000.png',
  'Origami',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.8],
 ['ContentImages/imgs0/0000.png',
  'chinese ink',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  3.0,
  0.6],
 ['ContentImages/imgs1/0000.png',
  'Pixel',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.5,
  1.6],
 ['ContentImages/imgs2/0000.png',
  'wasteland',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  0.5],
 ['ContentImages/imgs3/0000.png',
  'Children Crayon Painting',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.4,
  1.4],
 ['ContentImages/imgs4/0000.png',
  'Chinese Ink',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.8,
  1.5],
 ['ContentImages/imgs5/0000.png',
  'LEGO Toy',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  1.8,
  1.4],
 ['ContentImages/imgs0/0000.png',
  'Cyberpunk',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  1.8,
  1.6],
 ['ContentImages/imgs1/0000.png',
  'Origami',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  1.0,
  1.4],
 ['ContentImages/imgs2/0000.png',
  'Embroidery Art',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.6,
  0.8],
 ['ContentImages/imgs3/0000.png',
  'Pixel',
  'python',
  1,
  'DDIM',
  50,
  5,
  1024,
  1024,
  123456789,
  160,
  2.5,
  1.2]]

# Gradio 应用
iface = gr.Interface(
    fn=gradio_interface,
    inputs=[
        gr.Image(type="pil"),
        gr.Textbox(label="Style Prompt"),
        gr.Textbox(label="Python Binary Path", value=PYTHON_BIN),
        gr.Slider(label="Number of Images per Prompt", minimum=1, maximum=10, step=1, value=1),
        gr.Dropdown(label="Sampler", choices=["DDIM"], value="DDIM"),
        gr.Slider(label="Step", minimum=1, maximum=100, step=1, value=50),
        gr.Slider(label="CFG", minimum=1, maximum=10, step=1, value=5),
        gr.Slider(label="Height", minimum=256, maximum=2048, step=256, value=1024),
        gr.Slider(label="Width", minimum=256, maximum=2048, step=256, value=1024),
        gr.Number(label="Seed", value=123456789),
        gr.Dropdown(label="n", choices=[160, 320, 640, 1280], value=160),
        gr.Slider(label="b", minimum=1, maximum=3, step=0.1, value=2.5),
        gr.Slider(label="s", minimum=1, maximum=2, step=0.1, value=1.0)
    ],
    outputs=[
        gr.Textbox(label="Command Output"),
        gr.Gallery(label="Generated Images")
    ],
    title="FreeStyle: Text-guided Style Transfer using Diffusion Models",
    description="Upload an image and enter a style prompt to generate stylized images.",
    examples=examples
)

# 运行 Gradio 应用
iface.launch(share=True)
